name: Deploy to Amazon ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Build Docker image
        run: |
          docker build -t frontend:latest ./code\ for\ diagram\ 1/frontend
          docker build -t backend_rds:latest ./code\ for\ diagram\ 1/backend_rds
          docker build -t backend_redis:latest ./code\ for\ diagram\ 1/backend_redis
          docker images
          
      - name: Tag Docker image
        run: |
          docker tag frontend:latest ${{ secrets.ECR_REPOSITORY_URI }}frontend:latest
          docker tag backend_rds:latest ${{ secrets.ECR_REPOSITORY_URI }}backend_rds:latest
          docker tag backend_redis:latest ${{ secrets.ECR_REPOSITORY_URI }}backend_redis:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}frontend:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}backend_rds:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}backend_redis:latest

      - name: Update ECS Service to Force New Deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service \
            --cluster fargate-test \
            --service servise-of-free-containers \
            --force-new-deployment
